openapi: 3.0.1
info:
  title: Serverless PDF Tools API
  description: Serverless API for building and processing PDF files. Built on AWS Lambda
  version: 0.0.1
tags:
  - name: pdf
    description: PDF operations
security:
  - ApiKey: []
paths:
  /pdf:
    post:
      operationId: composePdf
      summary: Compose a PDF file from payload instructions
      description: |
        Composes a PDF file from payload instructions, saves it to S3 and returns the created S3 object.
      tags:
        - pdf
      requestBody:
        $ref: '#/components/requestBodies/ComposePdfPayload'
      responses:
        200:
          $ref: '#/components/responses/S3ReferenceOrPdf'
components:
  securitySchemes:
    ApiKey:
      type: 'apiKey'
      name: 'x-api-key'
      in: 'header'
  requestBodies:
    ComposePdfPayload:
      description: 'Request payload for composing a PDF'
      content:
        application/json:
          schema:
            type: object
            additionalProperties: false
            properties:
              layers:
                type: array
                items:
                  type: object
                  properties:
                    url:
                      type: string
                      format: uri
                      example: 'https://s3-eu-west-1.amazonaws.com/serverless-pdf-tools-api-dev/examples/KM_parhaat_pohja.pdf'
                  required:
                    - url
              fonts:
                type: array
                items:
                  type: object
                  properties:
                    family:
                      type: string
                      example: arial
                    url:
                      type: string
                      format: uri
                      example: https://s3-eu-west-1.amazonaws.com/serverless-pdf-tools-api-dev/fonts/arial.ttf
                  required: 
                   - family
                   - url
              fields:
                type: array
                items:
                  type: object
                  properties:
                    page:
                      anyOf:
                        - type: integer
                        - type: string
                      example: 1
                    x:
                      type: number
                    y: 
                      type: number
                    text:
                      type: string
                    font:
                      type: string
                      example: arial
                    size:
                      type: number
                      example: 12
                    color:
                      type: string
                      example: 0,0,0,0
                    lineHeight:
                      type: number
                      example: 1
                    align: 
                      type: string
                      enum:
                        - left
                        - center
                        - right
                    rotation:
                      type: number
                  required:
                    - page
                    - x
                    - y
                    - text
                    - font
                    - size
                    - color
            required:
              - layers
  responses:
    S3ReferenceOrPdf:
      description: 'Reference to S3 object or the PDF file'
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  url:
                    type: string
                    format: uri
        application/pdf:
          schema:
            type: string
            format: binary
